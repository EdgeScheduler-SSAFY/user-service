server:
  port: 8080

spring:
  application:
    name: user-service
  config:
    import:
      - optional:env.yml
      - optional:application-oauth.yml
  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${mysql.host}:${mysql.port}/${mysql.database}?useSSL=false&serverTimezone=UTC
    username: ${mysql.username}
    password: ${mysql.password}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  kafka:
    bootstrap-servers:
      - ${KAFKA_BOOTSTRAP_SERVER_1}
      - ${KAFKA_BOOTSTRAP_SERVER_2}
      - ${KAFKA_BOOTSTRAP_SERVER_3}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:localhost}
  instance:
    hostname: ${SERVER_HOST:localhost}

greeting:
  message: Welcome to user-service
